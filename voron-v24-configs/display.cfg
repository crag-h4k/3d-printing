#
[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PB10, EXP1_3=PE14, EXP1_5=PE10, EXP1_7=PE8, EXP1_9=<GND>,
    EXP1_2=PE15, EXP1_4=PE12, EXP1_6=PE9,  EXP1_8=PE7, EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PB14, EXP2_3=PC5,  EXP2_5=PC4,  EXP2_7=PB2,   EXP2_9=<GND>,
    EXP2_2=PB13, EXP2_4=PF11, EXP2_6=PB15, EXP2_8=<RST>, EXP2_10=<GND>
#
[display]
# mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2
contrast: 63
#
[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
initial_RED: 1.0
initial_GREEN: 0.0
initial_BLUE: 0.0
color_order: RGB
# 
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
## Index 1 = display, Index 2 and 3 = Knob
    SET_LED LED=fysetc_mini12864 RED=0.05 GREEN=0.2 BLUE=0.9 INDEX=1
    SET_LED LED=fysetc_mini12864 RED=0.1 GREEN=1.0 BLUE=0.3 INDEX=2
    SET_LED LED=fysetc_mini12864 RED=0.1 GREEN=1.0 BLUE=0.3 INDEX=3

[menu __main __octoprint]
type: disabled

[display_glyph a]
data:
 
 ...********...**
 ....********.***
 ....**....**.**.
 ....**....**.**.
 ....**....**.**.
 ....**....**.**.
 ....**....**.**.
 ....**....**.**.
 ....**....**.**.
 ....**...***..**
 ....**..***....*
 ....**.***......
 ....*****.......
 ....****........
 ....***.........
 ...***..........


[display_glyph b]
data:
 
 ****...******..*
 *****.********.*
 ...**.**....**.*
 ...**.**....**.*
 ...**.**....**.*
 ...**.**....**.*
 ...**.**....**.*
 ...**.**....**.*
 ...**.**....**.*
 ..**...**..**..*
 ***.....****...*
 **.......**.....
 ................
 ................
 ................
 ................

[display_glyph c]
data:

  **...***..******
  ***.****.*******
  ********.**....*
  ********.**....*
  **.*.***.**.....
  *.....**.**.....
  *.....**.**.....
  *.....**.**....*
  *.....**.**....*
  *.....**..**..**
  *.....**...****.
  *.....*.....**..
  ................
  ................
  ................
  ................

[display_glyph d]
data:

  ..**....**..****
  *.**....**.*****
  *.**....**.**...
  *.**....**.**...
  ..**....**.*****
  ..**....**.*****
  ..**....**.**...
  *.**....**.**...
  *.**....**.**...
  ...**..**...**..
  ....****.....***
  .....**.......**
  ................
  ................
  ................
  ................

[display_glyph e]
data:

  **.********.....
  ***.********....
  .**.**....**....
  **..**....**....
  *...**..........
  **..*****.......
  .**.*****.......
  .**.**.......... 
  .**.**....**....
  **..**...***....
  *...**..***.....
  ....**.***......
  ....*****.......
  ....****........
  ....***.........
  ...***..........


 
[display_glyph chamber]
data:
    ................
    ****************
    *....*....*....*
    *....*....*....*
    *....******....*
    *..............*
    *..............*
    *.....****.....*
    *.***.*..*.***.*
    *.....****.....*
    *......**......*
    *..............*
    *.************.*
    *...*......*...*
    ****************
    ................
 
[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }




[display_data __voron_display chamber]
position: 0,10
text:
  {% set chamber = printer['temperature_sensor chamber'] %}
	~chamber~
	{ "%3.0f" % (chamber.temperature,) }
  ~degrees~


[display_data __voron_display bed]
position: 2, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display print_serial]
position: 0, 0
text:
  ~a~
  ~b~
  ~c~ 
  ~d~
  ~e~


[display_data __voron_display progress_text]
position: 2, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) } 
 
 
[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% endif %}
